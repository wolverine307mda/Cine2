CREATE TABLE IF NOT EXISTS ButacaEntity (
   id TEXT NOT NULL PRIMARY KEY,
   tipo TEXT NOT NULL, -- Normal o VIP
   estado TEXT NOT NULL, -- Libre, ocupada o fuera de servicio
   ocupamiento TEXT NOT NULL,
   isDeleted INTEGER,
   createdAt TEXT NOT NULL,
   updatedAt TEXT NOT NULL
);

-- Tabla para almacenar información de los complementos
CREATE TABLE IF NOT EXISTS ComplementoEntity (
    id TEXT PRIMARY KEY,
    nombre TEXT NOT NULL,
    precio REAL NOT NULL,
    stock INTEGER NOT NULL,
    tipo TEXT NOT NULL,
    isDeleted INTEGER,
    createdAt TEXT NOT NULL,
    updatedAt TEXT NOT NULL
);

-- Tabla para almacenar información de las ventas
CREATE TABLE IF NOT EXISTS VentaEntity (
    id TEXT PRIMARY KEY UNIQUE,
    id_butaca TEXT NOT NULL, -- Tendriamos que crear otra tabla si decidimos hacer lo de multiples sillas --
    id_socio TEXT NOT NULL,
    isDeleted INTEGER,
    createdAt TEXT NOT NULL,
    updatedAt TEXT NOT NULL,

    FOREIGN KEY (id_butaca) REFERENCES ButacaEntity(id),
    FOREIGN KEY (id_socio) REFERENCES CuentaEntity(nombre)
);

-- Tabla para almacenar los complementos asociados a una venta
CREATE TABLE IF NOT EXISTS LineaVentaEntity (
   id_venta TEXT,
   id_complemento TEXT,
   cantidad INTEGER NOT NULL,
   isDeleted INTEGER ,
   createdAt TEXT NOT NULL,
   updatedAt TEXT NOT NULL,
   FOREIGN KEY (id_venta) REFERENCES VentaEntity(id),
   FOREIGN KEY (id_complemento) REFERENCES ComplementoEntity(id),
   PRIMARY KEY (id_venta, id_complemento)
);

-- Tabla para almacenar las cuentas --
CREATE TABLE IF NOT EXISTS CuentaEntity (
    nombre TEXT PRIMARY KEY,
    isDeleted INTEGER,
    createdAt TEXT NOT NULL,
    updatedAt TEXT NOT NULL
);

insertButaca:
INSERT INTO ButacaEntity (id, tipo, estado, ocupamiento,isDeleted, createdAt, updatedAt)
VALUES (?, ?, ?, ?, ?, ?,?);

insertComplemento:
INSERT INTO ComplementoEntity (id, nombre, precio, stock, tipo, createdAt, updatedAt, isDeleted)
VALUES (?, ?, ?, ?, ?, ?,?, ?);

removeAllButacas:
DELETE FROM ButacaEntity;

removeAllCuentas:
DELETE FROM CuentaEntity;

removeAllProductos:
DELETE FROM ComplementoEntity;

removeAllVentas:
DELETE FROM VentaEntity;
DELETE FROM LineaVentaEntity;

getButacaById:
SELECT * FROM ButacaEntity WHERE ? = id;

getAllButacas:
SELECT * FROM ButacaEntity;

selectLastButacaInserted:
SELECT * FROM ButacaEntity WHERE id = last_insert_rowid();