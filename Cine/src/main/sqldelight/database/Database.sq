CREATE TABLE IF NOT EXISTS ButacaEntity (
   id TEXT NOT NULL PRIMARY KEY,
   tipo TEXT NOT NULL, -- Normal o VIP
   estado TEXT NOT NULL, -- Libre, ocupada o fuera de servicio
   ocupamiento TEXT NOT NULL,
   isDeleted INTEGER NOT NULL ,
   createdAt TEXT NOT NULL,
   updatedAt TEXT NOT NULL
);

-- Tabla para almacenar información de los complementos
CREATE TABLE IF NOT EXISTS ComplementoEntity (
    id TEXT PRIMARY KEY,
    nombre TEXT NOT NULL,
    precio REAL NOT NULL,
    stock INTEGER NOT NULL,
    tipo TEXT NOT NULL,
    isDeleted INTEGER NOT NULL,
    createdAt TEXT NOT NULL,
    updatedAt TEXT NOT NULL
);

-- Tabla para almacenar información de las ventas
CREATE TABLE IF NOT EXISTS VentaEntity (
    id TEXT PRIMARY KEY,
    id_butaca TEXT NOT NULL, -- Tendriamos que crear otra tabla si decidimos hacer lo de multiples sillas --
    id_socio TEXT NOT NULL,
    isDeleted INTEGER NOT NULL,
    createdAt TEXT NOT NULL,
    updatedAt TEXT NOT NULL,

    FOREIGN KEY (id_butaca) REFERENCES ButacaEntity(id),
    FOREIGN KEY (id_socio) REFERENCES CuentaEntity(id)
);

-- Tabla para almacenar los complementos asociados a una venta
CREATE TABLE IF NOT EXISTS LineaVentaEntity (
   id TEXT PRIMARY KEY,
   id_venta TEXT NOT NULL,
   id_complemento TEXT NOT NULL,
   cantidad INTEGER NOT NULL,
   precio REAL NOT NULL,
   isDeleted INTEGER NOT NULL ,
   createdAt TEXT NOT NULL,
   updatedAt TEXT NOT NULL,
   FOREIGN KEY (id_complemento) REFERENCES ComplementoEntity(id),
   FOREIGN KEY (id_venta) REFERENCES VentaEntity(id)
);

-- Tabla para almacenar las cuentas --
CREATE TABLE IF NOT EXISTS CuentaEntity (
    id TEXT PRIMARY KEY,
    isDeleted INTEGER NOT NULL,
    createdAt TEXT NOT NULL,
    updatedAt TEXT NOT NULL
);

butacaExists:
SELECT COUNT(*) > 0 FROM ButacaEntity WHERE id = ?;

insertButaca:
INSERT INTO ButacaEntity (id, tipo, estado, ocupamiento,isDeleted, createdAt, updatedAt)
VALUES (?, ?, ?, ?, ?, ?,?);

updateButaca:
UPDATE ButacaEntity SET estado = ?, ocupamiento = ?, updatedAt = ?, tipo = ?, isDeleted = ? WHERE id = ?;

deleteButaca:
UPDATE ButacaEntity SET isDeleted = 1 WHERE id = ?;

deleteProducto:
UPDATE ButacaEntity SET isDeleted = 1 WHERE id = ?;

insertComplemento:
INSERT INTO ComplementoEntity (id, nombre, precio, stock, tipo, createdAt, updatedAt, isDeleted)
VALUES (?, ?, ?, ?, ?, ?,?, ?);

updateComplemento:
UPDATE ComplementoEntity
SET nombre = ?, precio = ?, stock = ?, tipo = ?, updatedAt = ?, isDeleted = ?
WHERE id = ?;

removeAllButacas:
DELETE FROM ButacaEntity;

removeAllCuentas:
DELETE FROM CuentaEntity;

removeAllProductos:
DELETE FROM ComplementoEntity;

countProductos:
SELECT COUNT(*) FROM ComplementoEntity;

getAllProductos:
SELECT * FROM ComplementoEntity;

productoExists:
SELECT COUNT(*) > 0 FROM ComplementoEntity WHERE id = ?;

getProductoById:
SELECT * FROM ComplementoEntity WHERE id = ?;

removeAllVentas:
DELETE FROM VentaEntity;
DELETE FROM LineaVentaEntity;

getButacaById:
SELECT * FROM ButacaEntity WHERE ? = id;

getAllButacas:
SELECT * FROM ButacaEntity;

countButacas:
SELECT COUNT(*) FROM ButacaEntity;

getAllVentas:
SELECT * FROM VentaEntity;

getLineaVentaByVentaId:
SELECT * FROM LineaVentaEntity WHERE ? = id_venta;

getVentaById:
SELECT * FROM VentaEntity WHERE ? = id;

insertVenta:
INSERT INTO VentaEntity (id,id_butaca,id_socio,updatedAt,createdAt,isDeleted)
VALUES (?,?,?,?,?,?);

insertLineaVenta:
INSERT INTO LineaVentaEntity (id,id_venta, id_complemento,precio,cantidad,updatedAt,createdAt,isDeleted)
VALUES (?,?,?,?,?,?,?,?);

existsVenta:
SELECT COUNT(*) > 0 FROM VentaEntity WHERE id = ?;

countVentas:
SELECT COUNT(*) FROM VentaEntity;

countLineasVenta:
SELECT COUNT(*) FROM LineaVentaEntity WHERE id = ?;

getLineaVentaById:
SELECT * FROM LineaVentaEntity WHERE id = ?;

updateVenta:
UPDATE VentaEntity
SET id_butaca = ?, id_socio = ?, isDeleted = ?, updatedAt = ? WHERE id = ?;

updateLineaVenta:
UPDATE LineaVentaEntity
SET id_complemento = ?, isDeleted = ?, cantidad = ?, updatedAt = ?, precio = ? WHERE id = ?;

deleteVenta:
UPDATE VentaEntity
SET isDeleted = 1 WHERE id = ?;

deleteLineaVenta:
UPDATE LineaVentaEntity
SET isDeleted = 1 WHERE id = ?;

